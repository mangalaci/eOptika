DROP TABLE IF EXISTS TURNOVER;
CREATE TABLE IF NOT EXISTS TURNOVER
SELECT 	i.sql_id,
		b.CT1_sku,
		b.CT1_sku_name,
i.warehouse_id,
ROUND(i.actual_quantity) AS inventory,
ROUND(COALESCE(b.items_sold_30days,0)/actual_quantity,2) AS inventory_turns_pa_30days,
ROUND(COALESCE(b.items_sold_90days,0)/actual_quantity,2) AS inventory_turns_pa_90days,
ROUND(COALESCE(b.items_sold_365days,0)/actual_quantity,2) AS inventory_turns_pa_365days,

ROUND(actual_quantity*30/COALESCE(b.items_sold_30days,0),2) AS days_per_turn_pa_30days,
ROUND(actual_quantity*90/COALESCE(b.items_sold_90days,0),2) AS days_per_turn_pa_90days,
ROUND(actual_quantity*365/COALESCE(b.items_sold_365days,0),2) AS days_per_turn_pa_365days,

b.items_sold_30days,
b.items_sold_90days,
b.items_sold_365days,
b.items_sold_ever,
b.COGS_pm_30days,
b.COGS_pm_90days,
b.COGS_pm_365days,
b.COGS_pm_ever,
b.revenues_pm_30days,
b.revenues_pm_90days,
b.revenues_pm_365days,
b.revenues_pm_ever,

b.CT2_sku,
b.CT2_pack,
b.CT3_product,
b.CT3_product_short,
b.CT4_product_brand,
b.CT5_manufacturer,
b.quantity_in_a_pack,
b.estimated_supplier_lead_time,
b.product_group,
b.lens_type,
b.is_color,
b.wear_duration,
b.wear_days,
b.item_type,
b.box_width,
b.box_height,
b.box_depth,
b.lens_bc,
b.lens_pwr,
b.lens_cyl,
b.lens_ax,
b.lens_dia,
b.lens_add,
b.lens_clr,
b.pack_size,
b.package_unit,
b.lens_material,
b.product_introduction_dt,
b.qty_per_storage_unit,
b.LVCR_item_flg,
b.SKU_on_stock

FROM inventory_report i
LEFT JOIN 
(
SELECT
		CT1_SKU,
		CT1_sku_name,
		CT2_sku,
		CT2_pack,
		CT3_product,
		CT3_product_short,
		CT4_product_brand,
		CT5_manufacturer,
		quantity_in_a_pack,
		estimated_supplier_lead_time,
		product_group,
		lens_type,
		is_color,
		wear_duration,
		wear_days,
		item_type,
		box_width,
		box_height,
		box_depth,
		lens_bc,
		lens_pwr,
		lens_cyl,
		lens_ax,
		lens_dia,
		lens_add,
		lens_clr,
		pack_size,
		package_unit,
		lens_material,
		product_introduction_dt,
		qty_per_storage_unit,
		LVCR_item_flg,
		SKU_on_stock,
		
		SUM(revenues_wdisc_in_base_currency) AS revenues_wdisc_in_base_currency, 
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 30 THEN item_quantity ELSE 0 END) AS items_sold_30days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 90 THEN item_quantity ELSE 0 END) AS items_sold_90days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 365 THEN item_quantity ELSE 0 END) AS items_sold_365days,
		SUM(item_quantity) AS items_sold_ever,
		
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 30 THEN item_net_purchase_price_in_base_currency ELSE 0 END) AS COGS_pm_30days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 90 THEN item_net_purchase_price_in_base_currency ELSE 0 END) AS COGS_pm_90days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 365 THEN item_net_purchase_price_in_base_currency ELSE 0 END) AS COGS_pm_365days,
		SUM(item_net_purchase_price_in_base_currency) AS COGS_pm_ever,
		
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 30 THEN revenues_wdisc_in_base_currency ELSE 0 END) AS revenues_pm_30days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 90 THEN revenues_wdisc_in_base_currency ELSE 0 END) AS revenues_pm_90days,
		SUM(CASE WHEN DATEDIFF(CURDATE(), created)  < 365 THEN revenues_wdisc_in_base_currency ELSE 0 END) AS revenues_pm_365days,
		SUM(revenues_wdisc_in_base_currency) AS revenues_pm_ever

FROM BASE_03_TABLE
WHERE origin = 'invoices'
AND item_quantity > 0
GROUP BY 
CT1_SKU,
CT1_sku_name,
CT2_sku,
CT2_pack,
CT3_product,
CT3_product_short,
CT4_product_brand,
CT5_manufacturer,
quantity_in_a_pack,
estimated_supplier_lead_time,
product_group,
lens_type,
is_color,
wear_duration,
wear_days,
item_type,
box_width,
box_height,
box_depth,
lens_bc,
lens_pwr,
lens_cyl,
lens_ax,
lens_dia,
lens_add,
lens_clr,
pack_size,
package_unit,
lens_material,
product_introduction_dt,
qty_per_storage_unit,
LVCR_item_flg,
SKU_on_stock
) b
ON i.item_sku = b.CT1_sku
;

ALTER TABLE TURNOVER ADD PRIMARY KEY (`sql_id`) USING BTREE;
